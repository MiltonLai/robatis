<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/builder/xml/mybatis-3-mapper.dtd">

<mapper namespace="com.rockbb.robatis.dao.mapper.TableColumnMapper">
	<resultMap type="com.rockbb.robatis.dao.dto.TableColumnDTO" id="dto_1">
		<id column="field" property="field" />
		<result column="type" property="type" />
		<result column="key" property="key" />
		<result column="extra" property="extra" />
		<result column="comments" property="comments" />
	</resultMap>

	<select id="getMySQLTables" resultType="java.lang.String">
		SHOW TABLES
	</select>

	<select id="getPGTables" resultType="java.lang.String">
		SELECT tablename FROM pg_catalog.pg_tables where schemaname = 'public'
	</select>

	<select id="getOracleTables" resultType="java.lang.String">
		SELECT A.TABLE_NAME
		FROM user_tables A
		ORDER BY TABLE_NAME ASC
	</select>

	<select id="getMySQLSchema" parameterType="java.util.Map" resultMap="dto_1">    
		DESCRIBE ${tableName}
	</select>

	<select id="getPGSchema" parameterType="java.util.Map" resultMap="dto_1">
		SELECT
			cc.column_name as field,
			cc.data_type,
			cc.udt_name,
			case
				when cc.udt_name = 'varchar' then 'varchar('||character_maximum_length||')'
				when cc.udt_name = 'bpchar' then 'char('||character_maximum_length||')'
				when cc.udt_name = 'text' then 'varchar(1024)'
				when cc.udt_name = 'int8' then 'bigint(11)'
				when cc.udt_name = 'int4' then 'int(11)'
				when cc.udt_name = 'int2' then 'tinyint(2)'
				when cc.udt_name = 'numeric' then 'decimal(10)'
				when cc.udt_name = 'float4' then 'decimal(10)'
				when cc.udt_name = 'float8' then 'decimal(10)'
				when cc.udt_name = 'jsonb' then 'varchar(255)'
				when cc.udt_name = 'timestamp' then 'datetime'
			end as type,
			cc.character_maximum_length,
			(
				SELECT
					case when constraint_type = 'PRIMARY KEY' then 'PRI'
					when constraint_type = 'UNIQUE' then 'UNI'
					else ''
					end
				FROM information_schema.table_constraints tc
					JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_name)
					JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name
				WHERE tc.table_name = #{tableName} and c.column_name = cc.column_name
			) as Key
		FROM information_schema.columns cc
		WHERE cc.table_name = #{tableName} order by cc.ordinal_position ASC;
	</select>

	<select id="getOracleSchema" parameterType="java.util.Map" resultMap="dto_1">    
		SELECT
			A.COLUMN_NAME as field,
			CASE WHEN A.DATA_TYPE = 'NUMBER' THEN
				A.DATA_TYPE||'('||A.DATA_PRECISION||','||A.DATA_SCALE||')'
			WHEN A.DATA_TYPE = 'VARCHAR2' THEN
				A.DATA_TYPE||'('||A.DATA_LENGTH||')'
			WHEN A.DATA_SCALE IS NULL THEN
				A.DATA_TYPE||'('||A.DATA_LENGTH||')'
			ELSE
				A.DATA_TYPE||'('||A.DATA_LENGTH||','||A.DATA_SCALE||')' END AS TYPE,
			B.CONSTRAINT_TYPE as key,
			A.nullable as extra,
			C.comments
		FROM USER_TAB_COLUMNS A
			LEFT JOIN (
				SELECT E.*, F.CONSTRAINT_TYPE FROM USER_CONS_COLUMNS E
				LEFT JOIN USER_CONSTRAINTS F ON E.CONSTRAINT_NAME = F.CONSTRAINT_NAME 
				WHERE E.TABLE_NAME = #{tableName} AND (F.CONSTRAINT_TYPE = 'P' OR F.CONSTRAINT_TYPE = 'U')
			) B ON A.column_name = B.column_name
			LEFT JOIN (
				SELECT G.* FROM user_col_comments G WHERE G.table_name = #{tableName}
			) C ON A.column_name = C.column_name
		WHERE A.TABLE_NAME = #{tableName}
		ORDER BY A.COLUMN_ID
	</select>

</mapper>